Preparing dataset 'idrid'...
training clahe done
testing clahe done
Preparing file loading from C:\Personal\DL_Lab\IDRID_dataset...
C:\Personal\DL_Lab\IDRID_dataset/labels/test.csv
  Image name  Retinopathy grade Risk of macular edema
1  IDRiD_001                  1                     0
2  IDRiD_002                  1                     1
3  IDRiD_003                  1                     0
4  IDRiD_004                  1                     0
5  IDRiD_005                  1                     1
Conversion completed
371
42
413
    Image name  Retinopathy grade Risk of macular edema
372  IDRiD_372                  1                     2
373  IDRiD_373                  0                     0
374  IDRiD_374                  1                     1
375  IDRiD_375                  1                     1
376  IDRiD_376                  1                     2
Positive and negative datasets created
  Image name  Retinopathy grade Risk of macular edema
1  IDRiD_001                  1                     2
2  IDRiD_002                  1                     2
3  IDRiD_003                  1                     2
4  IDRiD_004                  1                     2
5  IDRiD_005                  1                     0
paths found
Values known
make_ds works
All basic datasets created
From C:\Personal\DL_Lab\input_pipeline\dataset_loader.py:253: CounterV2 (from tensorflow.python.data.experimental.ops.counter) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.counter(...)` instead.
From C:\Personal\DL_Lab\input_pipeline\dataset_loader.py:253: CounterV2 (from tensorflow.python.data.experimental.ops.counter) is deprecated and will be removed in a future version.
Instructions for updating:
Use `tf.data.Dataset.counter(...)` instead.
Datasets corresponding to True sampling and augmentation created
Datasets corresponding to True created
No training configuration found in the save file, so the model was *not* compiled. Compile it manually.
No training configuration found in the save file, so the model was *not* compiled. Compile it manually.
Before tuning baseline
Training results
Test - loss: 0.68, acc: 0.58, recall: 1.00, precision: 0.58, Time: 6.93
Test - loss: 0.69, acc: 0.52, recall: 1.00, precision: 0.52, Time: 10.93
Test - loss: 0.69, acc: 0.52, recall: 1.00, precision: 0.52, Time: 15.59
Test - loss: 0.69, acc: 0.50, recall: 1.00, precision: 0.50, Time: 20.29
Test - loss: 0.68, acc: 0.64, recall: 1.00, precision: 0.64, Time: 25.11
Test - loss: 0.69, acc: 0.50, recall: 1.00, precision: 0.50, Time: 30.24
Test - loss: 0.70, acc: 0.41, recall: 1.00, precision: 0.41, Time: 34.26
Test - loss: 0.73, acc: 0.00, recall: 0.00, precision: 0.00, Time: 35.88
Validation results
Test - loss: 0.69, acc: 0.60, recall: 1.00, precision: 0.60, Time: 3.52
Testing results
Test - loss: 0.68, acc: 0.62, recall: 1.00, precision: 0.62, Time: 8.28
After tuning only freezing layers
Training starts

Start of epoch: 0 - Train - loss: 0.69, acc: 0.57, recall: 0.71, precision: 0.56, Val - loss: 0.69, acc: 0.52, recall: 0.48, precision: 0.63, Time: 47.33
Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.
Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.
5 out of the last 11 calls to <function Testing_routine.test_step_2 at 0x000002B72AAB7AF0> triggered tf.function retracing. Tracing is expensive and the excessive number of tracings could be due to (1) creating @tf.function repeatedly in a loop, (2) passing tensors with different shapes, (3) passing Python objects instead of tensors. For (1), please define your @tf.function outside of the loop. For (2), @tf.function has reduce_retracing=True option that can avoid unnecessary retracing. For (3), please refer to https://www.tensorflow.org/guide/function#controlling_retracing and https://www.tensorflow.org/api_docs/python/tf/function for  more details.
5 out of the last 11 calls to <function Testing_routine.test_step_2 at 0x000002B72AAB7AF0> triggered tf.function retracing. Tracing is expensive and the excessive number of tracings could be due to (1) creating @tf.function repeatedly in a loop, (2) passing tensors with different shapes, (3) passing Python objects instead of tensors. For (1), please define your @tf.function outside of the loop. For (2), @tf.function has reduce_retracing=True option that can avoid unnecessary retracing. For (3), please refer to https://www.tensorflow.org/guide/function#controlling_retracing and https://www.tensorflow.org/api_docs/python/tf/function for  more details.
Test - loss: 0.69, acc: 0.55, recall: 0.44, precision: 0.74, Time: 8.05
No training configuration found in the save file, so the model was *not* compiled. Compile it manually.
No training configuration found in the save file, so the model was *not* compiled. Compile it manually.
Before tuning inception_v3
Training results
6 out of the last 12 calls to <function Testing_routine.test_step_2 at 0x000002B7297E68B0> triggered tf.function retracing. Tracing is expensive and the excessive number of tracings could be due to (1) creating @tf.function repeatedly in a loop, (2) passing tensors with different shapes, (3) passing Python objects instead of tensors. For (1), please define your @tf.function outside of the loop. For (2), @tf.function has reduce_retracing=True option that can avoid unnecessary retracing. For (3), please refer to https://www.tensorflow.org/guide/function#controlling_retracing and https://www.tensorflow.org/api_docs/python/tf/function for  more details.
6 out of the last 12 calls to <function Testing_routine.test_step_2 at 0x000002B7297E68B0> triggered tf.function retracing. Tracing is expensive and the excessive number of tracings could be due to (1) creating @tf.function repeatedly in a loop, (2) passing tensors with different shapes, (3) passing Python objects instead of tensors. For (1), please define your @tf.function outside of the loop. For (2), @tf.function has reduce_retracing=True option that can avoid unnecessary retracing. For (3), please refer to https://www.tensorflow.org/guide/function#controlling_retracing and https://www.tensorflow.org/api_docs/python/tf/function for  more details.
Test - loss: 0.66, acc: 0.58, recall: 0.19, precision: 0.86, Time: 17.15
Test - loss: 0.68, acc: 0.55, recall: 0.20, precision: 0.88, Time: 22.06
Test - loss: 0.63, acc: 0.61, recall: 0.20, precision: 0.86, Time: 27.04
Test - loss: 0.70, acc: 0.45, recall: 0.14, precision: 0.62, Time: 32.06
Test - loss: 0.64, acc: 0.62, recall: 0.23, precision: 1.00, Time: 37.90
Test - loss: 0.65, acc: 0.55, recall: 0.23, precision: 0.80, Time: 45.13
Test - loss: 0.61, acc: 0.66, recall: 0.28, precision: 0.89, Time: 50.43
Test - loss: 0.56, acc: 0.70, recall: 0.00, precision: 0.00, Time: 53.17
Validation results
Test - loss: 0.71, acc: 0.45, recall: 0.08, precision: 1.00, Time: 6.74
Testing results
Test - loss: 0.75, acc: 0.49, recall: 0.25, precision: 0.76, Time: 14.00
After tuning only freezing layers
Training starts

Start of epoch: 0 - Train - loss: 0.66, acc: 0.59, recall: 0.64, precision: 0.59, Val - loss: 0.71, acc: 0.45, recall: 0.08, precision: 1.00, Time: 94.33
Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.
Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.
Test - loss: 0.77, acc: 0.50, recall: 0.19, precision: 1.00, Time: 17.08
No training configuration found in the save file, so the model was *not* compiled. Compile it manually.
No training configuration found in the save file, so the model was *not* compiled. Compile it manually.
Before tuning resnet_50
Training results
Test - loss: 0.69, acc: 0.45, recall: 0.00, precision: 0.00, Time: 25.83
Test - loss: 0.68, acc: 0.58, recall: 0.00, precision: 0.00, Time: 36.45
Test - loss: 0.69, acc: 0.48, recall: 0.00, precision: 0.00, Time: 46.21
Test - loss: 0.69, acc: 0.53, recall: 0.00, precision: 0.00, Time: 55.26
Test - loss: 0.69, acc: 0.44, recall: 0.00, precision: 0.00, Time: 61.77
Test - loss: 0.68, acc: 0.59, recall: 0.00, precision: 0.00, Time: 67.12
Test - loss: 0.70, acc: 0.38, recall: 0.00, precision: 0.00, Time: 72.53
Test - loss: 0.67, acc: 0.65, recall: 0.00, precision: 0.00, Time: 75.85
Validation results
Test - loss: 0.70, acc: 0.40, recall: 0.00, precision: 0.00, Time: 8.41
Testing results
Test - loss: 0.70, acc: 0.38, recall: 0.00, precision: 0.00, Time: 17.96
After tuning only freezing layers
Training starts
5 out of the last 17 calls to <function Trainer.train_step at 0x000002B72ABAE0D0> triggered tf.function retracing. Tracing is expensive and the excessive number of tracings could be due to (1) creating @tf.function repeatedly in a loop, (2) passing tensors with different shapes, (3) passing Python objects instead of tensors. For (1), please define your @tf.function outside of the loop. For (2), @tf.function has reduce_retracing=True option that can avoid unnecessary retracing. For (3), please refer to https://www.tensorflow.org/guide/function#controlling_retracing and https://www.tensorflow.org/api_docs/python/tf/function for  more details.
5 out of the last 17 calls to <function Trainer.train_step at 0x000002B72ABAE0D0> triggered tf.function retracing. Tracing is expensive and the excessive number of tracings could be due to (1) creating @tf.function repeatedly in a loop, (2) passing tensors with different shapes, (3) passing Python objects instead of tensors. For (1), please define your @tf.function outside of the loop. For (2), @tf.function has reduce_retracing=True option that can avoid unnecessary retracing. For (3), please refer to https://www.tensorflow.org/guide/function#controlling_retracing and https://www.tensorflow.org/api_docs/python/tf/function for  more details.

Start of epoch: 0 - Train - loss: 0.64, acc: 0.65, recall: 0.70, precision: 0.63, Val - loss: 0.70, acc: 0.40, recall: 0.00, precision: 0.00, Time: 133.78
Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.
Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.
Test - loss: 0.70, acc: 0.38, recall: 0.00, precision: 0.00, Time: 19.62
No training configuration found in the save file, so the model was *not* compiled. Compile it manually.
No training configuration found in the save file, so the model was *not* compiled. Compile it manually.
Before tuning efficient
Training results
Test - loss: 0.68, acc: 0.59, recall: 0.00, precision: 0.00, Time: 23.22
Test - loss: 0.72, acc: 0.45, recall: 0.00, precision: 0.00, Time: 30.77
Test - loss: 0.68, acc: 0.59, recall: 0.00, precision: 0.00, Time: 38.46
Test - loss: 0.72, acc: 0.44, recall: 0.00, precision: 0.00, Time: 46.06
Test - loss: 0.75, acc: 0.36, recall: 0.00, precision: 0.00, Time: 51.55
Test - loss: 0.71, acc: 0.47, recall: 0.00, precision: 0.00, Time: 55.40
Test - loss: 0.72, acc: 0.45, recall: 0.00, precision: 0.00, Time: 59.31
Test - loss: 0.56, acc: 0.95, recall: 0.00, precision: 0.00, Time: 63.43
Validation results
Test - loss: 0.74, acc: 0.40, recall: 0.00, precision: 0.00, Time: 8.93
Testing results
Test - loss: 0.74, acc: 0.38, recall: 0.00, precision: 0.00, Time: 19.89
After tuning only freezing layers
Training starts
5 out of the last 17 calls to <function Trainer.train_step at 0x000002B73895EAF0> triggered tf.function retracing. Tracing is expensive and the excessive number of tracings could be due to (1) creating @tf.function repeatedly in a loop, (2) passing tensors with different shapes, (3) passing Python objects instead of tensors. For (1), please define your @tf.function outside of the loop. For (2), @tf.function has reduce_retracing=True option that can avoid unnecessary retracing. For (3), please refer to https://www.tensorflow.org/guide/function#controlling_retracing and https://www.tensorflow.org/api_docs/python/tf/function for  more details.
5 out of the last 17 calls to <function Trainer.train_step at 0x000002B73895EAF0> triggered tf.function retracing. Tracing is expensive and the excessive number of tracings could be due to (1) creating @tf.function repeatedly in a loop, (2) passing tensors with different shapes, (3) passing Python objects instead of tensors. For (1), please define your @tf.function outside of the loop. For (2), @tf.function has reduce_retracing=True option that can avoid unnecessary retracing. For (3), please refer to https://www.tensorflow.org/guide/function#controlling_retracing and https://www.tensorflow.org/api_docs/python/tf/function for  more details.

Start of epoch: 0 - Train - loss: 0.70, acc: 0.49, recall: 0.29, precision: 0.49, Val - loss: 0.71, acc: 0.40, recall: 0.00, precision: 0.00, Time: 107.43
Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.
Compiled the loaded model, but the compiled metrics have yet to be built. `model.compile_metrics` will be empty until you train or evaluate the model.
Test - loss: 0.71, acc: 0.38, recall: 0.00, precision: 0.00, Time: 17.73
